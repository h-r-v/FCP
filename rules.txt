ELLIPSE:
- Use the "start" keyword only for the 1st node of the main function.
- Use the  "sub" keyword for subroutines.
    Format:
    sub <name_of_the_function> <name_of_variable1> <name_of_variable2> ....
    Ex:
    "sub add a b" will result in:
        def add(a,b,):
- Use "stop" keyword for stop nodes

RECTANGLE:
- Use the "print" keyword for printing anything.
    Format:
    print <varable_name/string> <varable_name/string> ...
    Ex:
    "print "Harsh" "Raj" “Verma” a b" will result in:
        print("Harsh", "Raj", “Verma”, a, b,)
- Use the  "input" keyword for taking input.
    Format:
    input <variable_name>(<variable_type>) <variable_name>(<variable_type>) ...
    Ex:
    "input a(int) name(str) address" will result in:
        a = int(input())
        name = str(input())
        address = input()
- If none of the keywords are used then whatever you write in a rectangle is directly copied in the code.
    Format:
    <anything>
    Ex:
    "i+=1" will result in:
        i+=1
    "import matplotlib.pyplot as plt" will result in:
        import matplotlib.pyplot as plt

RHOMBUS:

MAKE SURE YOU ALWAYS CONNECT THE EDGES IN SEQUENTIAL ORDER. ( you should always connect the unlabeled edge at the last and your 1st connection should always be to your scope )

  IF STATEMENTS
    - Any rhombus with only 1 incoming edge is treated as an if statement.
    - The LHS part of the statement is expected to be in the rhombus and the RHS part is expected to be on the label.
    Format:
    Inside rhombus: <statement1> with an outgoing edge labeled as <statement2>
    Ex1:
    Text in side rhombus "number%2" with an outgoing edge labeled as "True"(without quotes)(or "yes"(without quotes) ) will result in:
        if (number%2)==(True):
    Ex2:
    Text in side rhombus "name" with an outgoing edge labeled as ""Harsh"" will result in:
        if (name)==("Harsh"):
    Ex3:
    Text in side rhombus "name" with 3 outgoing edges labeled as ""Harsh"", “”Samriddhi””, “else” will result in:
    if (name)==("Harsh"):
	<inside_scope>
    elif (name)==(“Samriddhi”):
	<inside_scope>
    else:
	<inside_scope>
    NOTE:
    - Only the first outgoing edge is evaluated to a if statement all other are evaluated as elif statements ( any outgoing edge labeled as "else"(without quotes) is evaluated as an else statement )
    - Any unlabeled outgoing edges are treated as leaving the scope of if/elif/else.

  LOOPS
    - Any rhombus with more than 1 incoming edge is treated as a loop statement.
    FOR LOOP
    Format:
    <variable_name>,<initialization_condition>,<stoping_condition>,<increamnt> is the format for for loops
    Ex:
    i,0,10,1 will result in:
    	for i in range(0,10,1):
    WHILE LOOP
    - Any condition not the the for loop format written inside the rhombus will be treated as the condition for.   
    Format:
    <condition>
    Ex:
    i>=5 will result in:
    	while i>=5:
    	
SWIMLANE
- You can use various functionalities for the flowchart parser using this shape.

  GoogleSheet 
  -You can access data in a paticular GSHEET using the following syntax:
    Fromat:
    GSHEET <sheet_id> <range> <variable_name_where_the_retrived_data_will_be_stored>
    Ex:
    GSHEET "1OkYqidqH5vtBcx6MfQ2GUjMC-WeGJoaucPxM7_8v5kI" "A2:C5" data
    will result in getting cells A2 to C5 from https://docs.google.com/spreadsheets/d/1OkYqidqH5vtBcx6MfQ2GUjMC-WeGJoaucPxM7_8v5kI/edit#gid=0 and storing it in a variable called data. 
  
  GoogleDocs
  -You can access data in a paticular GDOCS using the following syntax:
    Fromat1:
    GDOCS <doc_id> <variable_name_where_the_retrived_data_will_be_stored>
    Ex:
    GDOCS "1oSL2p7b_K_DMBw5nrFeGTrb96EWQdp8Sc3nrBV9Lits" msg
    will result in getting the title and body's text from https://docs.google.com/document/d/1oSL2p7b_K_DMBw5nrFeGTrb96EWQdp8Sc3nrBV9Lits/edit?usp=sharing and storing it in the variable msg.
    Fromat2:
    GDOCS <doc_id> <full_content_flag> <variable_name_where_the_retrived_data_will_be_stored>
    Ex:
    GDOCS "1oSL2p7b_K_DMBw5nrFeGTrb96EWQdp8Sc3nrBV9Lits" False msg
    will result in getting the a dictionary discribing the style and all other attributes of the body from https://docs.google.com/document/d/1oSL2p7b_K_DMBw5nrFeGTrb96EWQdp8Sc3nrBV9Lits/edit?usp=sharing and saving into a variable named msg
    
  Mail
  - You can use the MAIL keyword to send a mail to any recipent you want.
    Format:
    MAIL <reciver_email> <subject> <body>
    Ex:
    MAIL "harshr.v.499@gmail.com" "This is the subject" "This is the body"
    will result in a mail to harshr.v.499@gmail.com with subject "This is the subject"(without quotes) and body "This is the body"(without quotes)
    

- Anything that is not in the above format in this box will be directly copied to the generated file.
  Format:
  <anything>
  Ex:
  sum( 2, 3) will result in:
  	sum( 2, 3)
    






